consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  CreateUsersPayload:
    example:
      credit: 2
      id: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
      name: Dolore tempora.
    properties:
      credit:
        example: 2
        minimum: 0
        type: integer
      id:
        example: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        type: string
      name:
        example: Dolore tempora.
        type: string
    required:
    - name
    title: CreateUsersPayload
    type: object
  Error:
    description: Error media type (default view)
    example:
      error: Velit eius.
    properties:
      error:
        example: Velit eius.
        type: string
    required:
    - error
    title: 'Mediatype identifier: error'
    type: object
  Location:
    description: Location media type (default view)
    example:
      can_play: true
      distance: 0.4606863
      game: numbers
      id: 2
      latitude: 0.2696802
      longitude: 0.1301244
      title: Ex ad.
      wallet: 7.9883846e+18
    properties:
      can_play:
        default: false
        example: true
        type: boolean
      distance:
        example: 0.4606863
        format: double
        type: number
      game:
        enum:
        - numbers
        example: numbers
        type: string
      id:
        example: 2
        minimum: 0
        type: integer
      latitude:
        example: 0.2696802
        format: double
        type: number
      longitude:
        example: 0.1301244
        format: double
        type: number
      title:
        example: Ex ad.
        type: string
      wallet:
        example: 7.9883846e+18
        format: int64
        type: integer
    required:
    - id
    - title
    - game
    - wallet
    - latitude
    - longitude
    - can_play
    - distance
    title: 'Mediatype identifier: location; view=default'
    type: object
  LocationCollection:
    description: LocationCollection is the media type for an array of Location (default
      view)
    example:
    - can_play: true
      distance: 0.4606863
      game: numbers
      id: 2
      latitude: 0.2696802
      longitude: 0.1301244
      title: Ex ad.
      wallet: 7.9883846e+18
    items:
      $ref: '#/definitions/Location'
    title: 'Mediatype identifier: location; type=collection'
    type: array
  Play:
    example:
      number: 5.876805e+18
    properties:
      number:
        example: 5.876805e+18
        format: int64
        type: integer
    required:
    - number
    title: Play
    type: object
  Result:
    description: Result media type (default view)
    example:
      detail: Nostrum impedit sapiente itaque ipsa laboriosam.
    properties:
      detail:
        example: Nostrum impedit sapiente itaque ipsa laboriosam.
        type: string
    required:
    - detail
    title: 'Mediatype identifier: result'
    type: object
  UpdateUsersPayload:
    example:
      credit: 2
      id: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
      name: Dolore tempora.
    properties:
      credit:
        example: 2
        minimum: 0
        type: integer
      id:
        example: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        type: string
      name:
        example: Dolore tempora.
        type: string
    required:
    - name
    title: UpdateUsersPayload
    type: object
  User:
    description: User media type (default view)
    example:
      credit: 2
      id: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
      name: Dolore tempora.
    properties:
      credit:
        example: 2
        minimum: 0
        type: integer
      id:
        example: 5d523e63-a106-bbbb-f3af-11d72e8e2a5c
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        type: string
      name:
        example: Dolore tempora.
        type: string
    required:
    - name
    title: 'Mediatype identifier: user'
    type: object
host: localhost:8000
info:
  version: v1
paths:
  /location:
    get:
      operationId: Locations#FindAll
      parameters:
      - enum:
        - numbers
        in: query
        name: game
        required: false
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LocationCollection'
      schemes:
      - http
      summary: FindAll Locations
      tags:
      - Locations
  /location/{id}:
    get:
      operationId: Locations#Get
      parameters:
      - in: path
        minimum: 0
        name: id
        required: true
        type: integer
      - in: query
        name: lat
        required: false
        type: number
      - in: query
        name: long
        required: false
        type: number
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Location'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Get Locations
      tags:
      - Locations
  /location/play/{id}:
    post:
      operationId: Locations#Play
      parameters:
      - in: path
        minimum: 0
        name: id
        required: true
        type: integer
      - in: query
        name: lat
        required: true
        type: number
      - in: query
        name: long
        required: true
        type: number
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/Play'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Result'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Play Locations
      tags:
      - Locations
  /user:
    post:
      operationId: Users#Create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUsersPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Create Users
      tags:
      - Users
  /user/me:
    get:
      operationId: Users#Get
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Get Users
      tags:
      - Users
    post:
      operationId: Users#Update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUsersPayload'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
      schemes:
      - http
      summary: Update Users
      tags:
      - Users
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
schemes:
- http
swagger: "2.0"
